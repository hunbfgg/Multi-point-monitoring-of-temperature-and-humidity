C51 COMPILER V9.54   51_DHT21                                                              11/27/2020 11:59:40 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE 51_DHT21
OBJECT MODULE PLACED IN 51_DHT21.OBJ
COMPILER INVOKED BY: D:\keilARM\C51\BIN\C51.EXE 51_DHT21.c COMPACT OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "nRF24L01.h"
   2          #include "def.h"
   3          #include "lcd.h"
   4          #include "dht11.h"
   5          
   6          #define uchar unsigned char
   7          #define uint unsigned int
   8          
   9          unsigned char tem,hmi;
  10          
  11          
  12          char read_data();
  13          void delay(uchar z);
  14          
  15          void delayms(uint x)
  16          {
  17   1        uchar i,j;
  18   1        for(i=x;i>0;i--)
  19   1          for(j=110;j>0;j--);
  20   1      }
  21          void delay(uchar z)
  22          {
  23   1        uint x,y;
  24   1        for(x=z;x>0;x--)
  25   1         for(y=110;y>0;y--);
  26   1      }
  27          void delay_10us()
  28          {
  29   1        uchar i;
  30   1        i--;i--;i--;i--;i--;i--;
  31   1      }
  32          
  33          void UsartInit()
  34          {
  35   1        SCON=0X50;      //设置为工作方式1
  36   1        TMOD=0X20;      //设置计数器工作方式2
  37   1        PCON=0X80;      //波特率加倍
  38   1        TH1=0XFA;       //计数器初始值设置，注意波特率是4800的
  39   1        TL1=0XFA;
  40   1        ES=1;           //打开接收中断
  41   1        EA=1;           //打开总中断
  42   1        TR1=1;          //打开计数器
  43   1      }
  44          
  45          
  46          void Usart() interrupt 4
  47          {
  48   1        unsigned char receiveData;
  49   1      
  50   1        receiveData=SBUF;//出去接收到的数据
  51   1        RI = 0;//清除接收中断标志位
  52   1        SBUF=receiveData;//将接收到的数据放入到发送寄存器
  53   1        while(!TI);      //等待发送数据完成
  54   1        TI=0;            //清除发送完成标志位
  55   1      }
C51 COMPILER V9.54   51_DHT21                                                              11/27/2020 11:59:40 PAGE 2   

  56          
  57          
  58          void PutString(unsigned char *TXStr) 
  59          { 
  60   1        ES=0; 
  61   1        while(*TXStr!=0) 
  62   1        { 
  63   2          SBUF=*TXStr;
  64   2          while(TI==0);
  65   2          TI=0; 
  66   2          TXStr++;
  67   2        }
  68   1        ES=1; 
  69   1      }
  70          
  71          
  72          
  73          void main()
  74          {
  75   1        uchar RxBuf[20]={0};
  76   1      //  init(); 
  77   1        init_io() ;
  78   1        UsartInit();
  79   1        LcdInit();
  80   1        
  81   1        LcdWriteCom(0x80);
  82   1        LcdWriteData('H');
  83   1        LcdWriteData('1');
  84   1        LcdWriteData(':');
  85   1        
  86   1        LcdWriteCom(0x80+9);
  87   1        LcdWriteData('H');
  88   1        LcdWriteData('2');
  89   1        LcdWriteData(':');
  90   1        
  91   1        LcdWriteCom(0x80+0x40+4);
  92   1        LcdWriteData('H');
  93   1        LcdWriteData('3');
  94   1        LcdWriteData(':');
  95   1        
  96   1        
  97   1        
  98   1        while(1)
  99   1        { 
 100   2          DHT11_receive(&tem,&hmi);
 101   2          LcdWriteCom(0x80+3);
 102   2          LcdWriteData(tem/10+'0');
 103   2          LcdWriteData(tem%10+'0');
 104   2          LcdWriteData(' ');
 105   2          LcdWriteData(hmi/10+'0');
 106   2          LcdWriteData(hmi%10+'0');
 107   2          
 108   2          
 109   2          
 110   2          SetRX_Mode(); 
 111   2          
 112   2          PutString("no receive!\r\n");
 113   2          if(nRF24L01_RxPacket(RxBuf))
 114   2          { 
 115   3            LcdWriteCom(0x80+12);
 116   3            LcdWriteData(RxBuf[1]+'0');
 117   3            LcdWriteData(RxBuf[2]+'0');
C51 COMPILER V9.54   51_DHT21                                                              11/27/2020 11:59:40 PAGE 3   

 118   3            LcdWriteData(' ');
 119   3            LcdWriteCom(0x80+0x40);
 120   3            LcdWriteData(RxBuf[3]+'0');
 121   3            LcdWriteData(RxBuf[4]+'0');
 122   3            
 123   3            LcdWriteCom(0x80+0x40+7);
 124   3            LcdWriteData(RxBuf[5]+'0');
 125   3            LcdWriteData(RxBuf[6]+'0');
 126   3            LcdWriteData(' ');
 127   3            LcdWriteData(RxBuf[7]+'0');
 128   3            LcdWriteData(RxBuf[8]+'0');
 129   3            
 130   3            PutString("I receive\r\n");
 131   3            PutString(RxBuf);
 132   3            PutString("\r\n");
 133   3          } 
 134   2        
 135   2        }
 136   1      }
 137            
 138                


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    462    ----
   CONSTANT SIZE    =     49    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      2      21
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
